version: "3.9"

x-configs: &common_config
  restart: always
  env_file:
    - ./.env

services:
  django_admin:
    <<: *common_config
    build: ./admin
    volumes:
      - ./admin:/code
      - static_volume:/code/static
      - media_volume:/code/media
    command: /start.sh
    depends_on:
      db:
        condition: service_healthy

  websockets:
    <<: *common_config
    build:
      context: ws
      target: ${FASTAPI_ENV}
    volumes:
      - .:/app
    ports:
      - "8084:8084"
    depends_on:
      db:
        condition: service_healthy

  db:
    <<: *common_config
    image: ghcr.io/dbsystel/postgresql-partman:14
    container_name: db
    shm_size: 1g
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    <<: *common_config
    image: nginx:1.24
    volumes:
      - ./tmp/logs/nginx/:/var/log/nginx/
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs/:/etc/nginx/conf.d/:ro
      - static_volume:/data/static:ro
      - media_volume:/data/media:ro
    depends_on:
      - django_admin
    ports:
      - "80:80"

  rabbitmq:
    <<: *common_config
    image: rabbitmq:3.10.7-management
    ports:
      - "15672:15672"  # Management Web UI
      - "5672:5672"    # AMQP protocol
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  # Persist data

  redis:
    image: redis:alpine
    container_name: redis
    expose:
      - 6379
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/var/lib/redis

  celery:
    build: ./admin
    volumes:
      - ./admin:/code
    command: celery -A core worker -l info --concurrency 4
    environment:
      - TZ=Asia/Almaty
    env_file:
      - ./.env
    depends_on:
      - django_admin
      - db
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  celery-beat:
    build: ./admin
    volumes:
      - ./admin:/code
    command: celery -A core beat -l info
    environment:
      - TZ=Asia/Almaty
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

volumes:
  postgres_data:
  rabbitmq_data:
  redis_data:
  static_volume:
  media_volume:
